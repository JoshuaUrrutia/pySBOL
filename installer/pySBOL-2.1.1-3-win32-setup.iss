; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "pySBOL"
#define MyAppVersion "2.1.1"
#define MyAppSubVersion ""
#define MyArchitecture "x86"
#define MyAppPublisher "SBOL Team"
#define PythonSubVer = "3.6"
#define PythonSubVerWithoutDots = "36"
#define PythonVer = "3"
#define MyAppURL "http://sbolstandard.org/"

[Setup]
AppId={{CF709EA4-9A1A-46A9-BA70-911EAB066939}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DisableWelcomePage=no
DefaultDirName=None
DirExistsWarning=no

DisableProgramGroupPage=yes
OutputDir = .\dist
OutputBaseFilename={#MyAppName}-{#MyAppVersion}{#MyAppSubVersion}-Python{#PythonSubVer}-{#MyArchitecture}-setup
Compression=lzma2/fast
SolidCompression=no
PrivilegesRequired=admin
RestartApplications=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

;[Tasks]
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "./install_{#PythonVer}_{#MyArchitecture}/wrapper/Win_32_3/sbol/*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "./release_{#PythonVer}_{#MyArchitecture}/wrapper/Release/_libsbol.pyd"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./release_{#PythonVer}_{#MyArchitecture}/wrapper/Release/_libsbol.exp"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./release_{#PythonVer}_{#MyArchitecture}/wrapper/Release/_libsbol.lib"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./wrapper/__init__.py"; DestDir: "{app}"; Flags: ignoreversion
;Source: "./wrapper/sbol.py"; DestDir: "{app}"; Flags: ignoreversion
Source: "./LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion 

;[Registry]
;Root: HKCU; Subkey: "Software\Python\PythonCore\2.7\Help\Main Python Documentation"; ValueType: string; ValueData: "{app}\python-{#PyVer}\Doc\python{#PyVer}.chm"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKCU; Subkey: "Software\Python\PythonCore\2.7\InstallPath"; ValueType: string; ValueData: "{app}\python-{#PyVer}"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKCU; Subkey: "Software\Python\PythonCore\2.7\InstallPath\InstallGroup"; ValueType: string; ValueData: "Python 2.7"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKCU; Subkey: "Software\Python\PythonCore\2.7\Modules"; ValueType: none; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKCU; Subkey: "Software\Python\PythonCore\2.7\PythonPath"; ValueType: string; ValueData: "{app}\python-{#PyVer}\Lib;{app}\python-{#PyVer}\DLLs"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty

;Root: HKLM; Subkey: "Software\Wow6432Node\Python\PythonCore\2.7\Help\Main Python Documentation"; ValueType: string; ValueData: "{app}\python-{#PyVer}\Doc\python{#PyVer}.chm"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKLM; Subkey: "Software\Wow6432Node\Python\PythonCore\2.7\InstallPath"; ValueType: string; ValueData: "{app}\python-{#PyVer}"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKLM; Subkey: "Software\Wow6432Node\Python\PythonCore\2.7\InstallPath\InstallGroup"; ValueType: string; ValueData: "Python 2.7"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKLM; Subkey: "Software\Wow6432Node\Python\PythonCore\2.7\Modules"; ValueType: none; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty
;Root: HKLM; Subkey: "Software\Wow6432Node\Python\PythonCore\2.7\PythonPath"; ValueType: string; ValueData: "{app}\python-{#PyVer}\Lib;{app}\python-{#PyVer}\DLLs"; Flags: createvalueifdoesntexist uninsdeletevalue uninsdeletekeyifempty

[Messages]
SelectDirBrowseLabel=To continue, click Next.

[Code]
var
  DirCombo: TNewComboBox;
  CancelWithoutPrompt: boolean;

function InitializeSetup(): Boolean;
begin
  CancelWithoutPrompt := false;
  result := true;
end;

function GetInstallDir(PathList: TStringList): Integer;
var
  InstallDirLM: String;
  InstallDirCU: String;
  InstallDirCondaLM: String;
  InstallDirCondaCU: String;
  temp_ind: Integer;
  ArchStr: String;
begin
  Result := 0;
  ArchStr := '{#MyArchitecture}';
  if RegQueryStringValue(HKLM32, 'SOFTWARE\Python\PythonCore\{#PythonSubVer}\InstallPath', '', InstallDirLM) then
    begin
      if not PathList.Find(InstallDirLM, temp_ind) then
        PathList.Add(InstallDirLM + '\Lib\site-packages\sbol\');
    end;
  if RegQueryStringValue(HKCU32, 'SOFTWARE\Python\PythonCore\{#PythonSubVer}\InstallPath', '', InstallDirCU) then 
    begin
      if not PathList.Find(InstallDirCU, temp_ind) then
        PathList.Add(InstallDirCU + '\Lib\site-packages\sbol\');
    end;
  if RegQueryStringValue(HKLM, 'SOFTWARE\Python\ContinuumAnalytics\Anaconda{#PythonSubVerWithoutDots}-32\InstallPath', '', InstallDirCondaLM) then
    begin
      if not PathList.Find(InstallDirCondaLM, temp_ind) then
        PathList.Add(InstallDirCondaLM + '\Lib\site-packages\sbol\');
    end;
  if RegQueryStringValue(HKCU, 'SOFTWARE\Python\ContinuumAnalytics\Anaconda{#PythonSubVerWithoutDots}-32\InstallPath', '', InstallDirCondaCU) then
    begin
      if not PathList.Find(InstallDirCondaCU, temp_ind) then
        PathList.Add(InstallDirCondaCU + '\Lib\site-packages\sbol\');
    end;
  Result := PathList.Count;
end;

function GetDefaultInstallDir(PathList: TStringList): Integer;
var
  DefaultDir: String;
begin
  DefaultDir := '{sd}\sbol\'
  PathList.Add(DefaultDir);
end;

procedure DriveComboChange(Sender: TObject);
begin
  WizardForm.DirEdit.Text := DirCombo.Text;
end;

procedure CancelButtonClick(CurPageID: Integer; var Cancel, Confirm: Boolean);
begin
  if CurPageID=wpInstalling then
    Confirm := not CancelWithoutPrompt;
end;

procedure InitializeWizard;
var
  I: Integer;
  StringList: TStringList;
begin
  StringList := TStringList.Create;
  try
    if GetInstallDir(StringList) = 0 then
      begin
        MsgBox('Installer could not find existing Python installations. The installer will extract on {sd}',mbError,MB_OK);
        StringList.Clear;
        GetDefaultInstallDir(StringList)
        //CancelWithoutPrompt := true;
        //WizardForm.Close;
      end;
          
    if GetInstallDir(StringList) > 0 then
      begin
        StringList.Clear;
        GetInstallDir(StringList)
      end;

    WizardForm.DirEdit.Visible := False;
    WizardForm.DirBrowseButton.Visible := False;
    
    DirCombo := TNewComboBox.Create(WizardForm);
    DirCombo.Parent := WizardForm.DirEdit.Parent;
    DirCombo.SetBounds(WizardForm.DirEdit.Left, WizardForm.DirEdit.Top,
      WizardForm.DirBrowseButton.Left + WizardForm.DirBrowseButton.Width -
      WizardForm.DirEdit.Left, WizardForm.DirEdit.Height);
    DirCombo.Style := csDropDownList;
    DirCombo.OnChange := @DriveComboChange;

    for I := 0 to StringList.Count - 1 do
      DirCombo.Items.Add(StringList[I]);

    DirCombo.ItemIndex := 0;
    DirCombo.OnChange(nil);

  finally
    StringList.Free;
  end;
end;
